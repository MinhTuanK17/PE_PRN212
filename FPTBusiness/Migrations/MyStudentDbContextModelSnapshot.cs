// <auto-generated />
using System;
using FPTBusiness;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FPTBusiness.Migrations
{
    [DbContext(typeof(MyStudentDbContext))]
    partial class MyStudentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FPTBusiness.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"));

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Point")
                        .HasColumnType("money");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("GradeId");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            GradeId = 1,
                            DateCreate = new DateTime(2024, 7, 14, 17, 36, 0, 689, DateTimeKind.Local).AddTicks(4592),
                            Point = 6m,
                            StudentId = 1,
                            SubjectId = 1
                        },
                        new
                        {
                            GradeId = 2,
                            DateCreate = new DateTime(2024, 7, 14, 17, 36, 0, 689, DateTimeKind.Local).AddTicks(4632),
                            Point = 6m,
                            StudentId = 2,
                            SubjectId = 2
                        },
                        new
                        {
                            GradeId = 3,
                            DateCreate = new DateTime(2024, 7, 14, 17, 36, 0, 689, DateTimeKind.Local).AddTicks(4636),
                            Point = 5m,
                            StudentId = 2,
                            SubjectId = 1
                        },
                        new
                        {
                            GradeId = 4,
                            DateCreate = new DateTime(2024, 7, 14, 17, 36, 0, 689, DateTimeKind.Local).AddTicks(4640),
                            Point = 7m,
                            StudentId = 4,
                            SubjectId = 4
                        },
                        new
                        {
                            GradeId = 5,
                            DateCreate = new DateTime(2024, 7, 14, 17, 36, 0, 689, DateTimeKind.Local).AddTicks(4644),
                            Point = 7m,
                            StudentId = 5,
                            SubjectId = 4
                        },
                        new
                        {
                            GradeId = 6,
                            DateCreate = new DateTime(2024, 7, 14, 17, 36, 0, 689, DateTimeKind.Local).AddTicks(4648),
                            Point = 9m,
                            StudentId = 4,
                            SubjectId = 3
                        });
                });

            modelBuilder.Entity("FPTBusiness.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("StudentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            StudentCode = "DE170526",
                            StudentName = "Dương Đức Anh"
                        },
                        new
                        {
                            StudentId = 2,
                            StudentCode = "DE180229",
                            StudentName = "Phan Thành Chung"
                        },
                        new
                        {
                            StudentId = 4,
                            StudentCode = "DE180391",
                            StudentName = "Hoàng Công Minh"
                        },
                        new
                        {
                            StudentId = 5,
                            StudentCode = "DE170523",
                            StudentName = "Ngô Đông Quân"
                        });
                });

            modelBuilder.Entity("FPTBusiness.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            SubjectName = ".NET"
                        },
                        new
                        {
                            SubjectId = 2,
                            SubjectName = "JAVA"
                        },
                        new
                        {
                            SubjectId = 3,
                            SubjectName = "NODEJS"
                        },
                        new
                        {
                            SubjectId = 4,
                            SubjectName = "ANDROID"
                        });
                });

            modelBuilder.Entity("FPTBusiness.Grade", b =>
                {
                    b.HasOne("FPTBusiness.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FPTBusiness.Subject", "Subject")
                        .WithMany("Grades")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("FPTBusiness.Student", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("FPTBusiness.Subject", b =>
                {
                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
